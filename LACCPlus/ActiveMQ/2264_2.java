//,temp,DemandForwardingBridgeSupport.java,1411,1438,temp,ConduitBridge.java,59,102
//,3
public class xxx {
    protected boolean addToAlreadyInterestedConsumers(ConsumerInfo info, boolean isForcedDurable) {
        //If a network subscription and a queue check if isConduitNetworkQueueSubscriptions is true
        //If true then we want to try and conduit
        //For topics we always want to conduit regardless of network subscription or not
        if (info.isNetworkSubscription() && info.getDestination().isQueue() &&
                !configuration.isConduitNetworkQueueSubscriptions()) {
            return false;
        }
        boolean matched = false;

        // search through existing subscriptions and see if we have a match
        for (DemandSubscription ds : subscriptionMapByLocalId.values()) {
            DestinationFilter filter = DestinationFilter.parseFilter(ds.getLocalInfo().getDestination());
            if (canConduit(ds) && filter.matches(info.getDestination())) {
                LOG.debug("{} {} with ids {} matched (add interest) {}",
                        configuration.getBrokerName(), info, info.getNetworkConsumerIds(), ds);
                // add the interest in the subscription
                if (!info.isDurable()) {
                    ds.add(info.getConsumerId());
                    if (isForcedDurable) {
                        forcedDurableRemoteId.add(info.getConsumerId());
                        ds.addForcedDurableConsumer(info.getConsumerId());
                    }
                } else {
                    //Handle the demand generated by proxy network subscriptions
                    //The broker path is case is normal
                    if (isProxyNSConsumerBrokerPath(info) &&
                            info.getSubscriptionName() != null && info.getSubscriptionName().startsWith(DURABLE_SUB_PREFIX)) {
                        final BrokerId[] path = info.getBrokerPath();
                        addProxyNetworkSubscriptionBrokerPath(ds, path, info.getSubscriptionName());
                    //This is the durable sync case on broker restart
                    } else if (isProxyNSConsumerClientId(info.getClientId()) &&
                            isProxyBridgeSubscription(info.getClientId(), info.getSubscriptionName())) {
                        addProxyNetworkSubscriptionClientId(ds, info.getClientId(), info.getSubscriptionName());
                    } else {
                		ds.getDurableRemoteSubs().add(new SubscriptionInfo(info.getClientId(), info.getSubscriptionName()));
                	}
                }
                matched = true;
                // continue - we want interest to any existing DemandSubscriptions
            }
        }
        return matched;
    }

};