//,temp,LeaderSessionTrackerTest.java,126,162,temp,LeaderSessionTrackerTest.java,84,120
//,3
public class xxx {
    public void testCreateEphemeral(boolean localSessionEnabled) throws Exception {
        if (localSessionEnabled) {
            qu.enableLocalSession(true);
        }
        qu.startAll();
        QuorumPeer leader = qu.getLeaderQuorumPeer();

        ZooKeeper zk = ClientBase.createZKClient(qu.getConnectString(leader));

        CreateRequest createRequest = new CreateRequest("/impossible",
                new byte[0], Ids.OPEN_ACL_UNSAFE, CreateMode.EPHEMERAL.toFlag());
        ByteArrayOutputStream baos = new ByteArrayOutputStream();
        BinaryOutputArchive boa = BinaryOutputArchive.getArchive(baos);
        createRequest.serialize(boa, "request");
        ByteBuffer bb = ByteBuffer.wrap(baos.toByteArray());

        // Mimic sessionId generated by follower's local session tracker
        long sid = qu.getFollowerQuorumPeers().get(0).getActiveServer()
                .getServerId();
        long fakeSessionId = (sid << 56) + 1;

        LOG.info("Fake session Id: " + Long.toHexString(fakeSessionId));

        Request request = new Request(null, fakeSessionId, 0, OpCode.create,
                bb, new ArrayList<Id>());

        // Submit request directly to leader
        leader.getActiveServer().submitRequest(request);

        // Make sure that previous request is finished
        zk.create("/ok", new byte[0], Ids.OPEN_ACL_UNSAFE,
                CreateMode.PERSISTENT);

        Stat stat = zk.exists("/impossible", null);
        Assert.assertEquals("Node from fake session get created", null, stat);

    }

};